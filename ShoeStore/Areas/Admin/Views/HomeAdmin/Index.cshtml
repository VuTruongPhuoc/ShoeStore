
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<!-- Material Design Icons -->
<link href="https://cdn.jsdelivr.net/npm/@@mdi/font/css/materialdesignicons.min.css" rel="stylesheet">
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Thống kê</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Thống kê</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3 id="orderCount">Loading...</h3>
                        <p>Tổng hóa đơn đã thanh toán</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                 @*    <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a> *@
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3 id="products">Loading...</h3>
                        <p>Tổng số sản phẩm đã bán</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                   @*  <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a> *@
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="customerCount">Loading...</h3>
                        <p>Tổng số khách hàng</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    @* <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a> *@
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3 id="revenues">Loading...</h3>

                        <p>Tổng doanh thu</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                  @*   <a href="#" class="small-box-footer">Xem thêm <i class="fas fa-arrow-circle-right"></i></a> *@
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- /.row -->
        <!-- Main row -->
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="row gy-4">
                <!-- Chart -->
                <div class="col-xl-12 col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <h3 class="mb-1">Doanh thu</h3>
                                <div class="d-flex align-items-center">
                                    <span class="mr-2">Chọn tháng: </span>
                                    <!-- Dropdown for selecting the past 15 years -->
                                    <div class="dropdown" style="margin-right: 10px;">
                                        <select id="monthDropdown" class="form-control" style="width: 100%">
                                            <option value="0">Không</option>
                                            @for (int month = 1; month <= 12; month++)
                                            {
                                                <option value="@month">@month</option>
                                            }
                                        </select>
                                    </div>
                                    <span class="mr-2">Chọn năm: </span>
                                    <!-- Dropdown for selecting the past 15 years -->
                                    <div class="dropdown" style="margin-right: 10px;">
                                        <select id="yearDropdown" class="form-control" style="width: 100%">
                                            @for (int year = DateTime.Now.Year; year >= DateTime.Now.Year - 15; year--)
                                            {
                                                <option value="@year">@year</option>
                                            }
                                        </select>
                                    </div>
                                    <span class="mr-2">Kiểu biểu đồ: </span>
                                    <!-- Dropdown for selecting chart type -->
                                    <div class="dropdown">
                                        <select id="chartTypeDropdown" class="form-control" style="width: 100%">
                                            <option value="yearly">1 năm</option>
                                            <option value="monthly">1 tháng</option>
                                            <option value="weekly">7 ngày qua</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-center" style="margin-top: 10px">
                                <!-- Thêm ô input cho startdate -->
                                <div class="form-group">
                                    <label for="startDate">Ngày bắt đầu:</label>
                                   
                                </div>
                                <div class="form-group">
                                    <input type="date" class="form-control" id="startDate" placeholder="dd/mm/yyyy">
                                </div>
                                <!-- Thêm ô input cho endDate -->
                                <div>
                                    <label for="endDate">Ngày kết thúc:</label>                  
                                </div>
                                <div class="form-group">
                                    <input type="date" class="form-control" id="endDate" placeholder="dd/mm/yyyy">
                                </div>


                                <!-- Nút xác nhận -->
                                <button class="btn btn-primary" value="datepicker" onclick="validateAndFetch()">Xác nhận</button>

                                <!-- Button to export data to Excel -->
                                <button id="exportBtn" class="btn btn-primary ml-2" onclick="exportToExcel()">Xuất File Excel</button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="container">
                                <!-- Canvas for the selected chart type -->
                                <canvas id="selectedChart" height="90"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <!--/ Chart -->
                <!-- Top 5 danh sách sản phẩm -->
                <!-- Thêm ID để dễ dàng truy cập thông qua JavaScript -->
                <div class="col-xl-12 col-md-12">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h5 class="card-title m-0 me-2">Top 5 sản phẩm bán chạy</h5>
                            <div class="dropdown" style="margin-right: 10px;">
                                @* <button class="btn p-0" type="button" id="saleStatus" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="mdi mdi-dots-vertical mdi-24px"></i>
                                </button>
                                <div class="dropdown-menu" aria-labelledby="saleStatus">
                                    <a class="dropdown-item" onclick="sortBy('quantity')" style="cursor:pointer">Theo số lượng</a>
                                    <a class="dropdown-item" onclick="sortBy('earnings')" style="cursor:pointer">Theo tổng tiền</a>
                                </div> *@
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
                                <!-- HTML cho hiển thị dữ liệu -->
                                <table class="table" id="productTable">
                                    <thead>
                                        <tr>
                                            <th>Ảnh</th>
                                            <th>Tên sản phẩm</th>
                                            <th>Đã bán(đôi)</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <!--/ Top 5 danh sách sản phẩm -->
                <!--/Script xử lí -->
                <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <!-- Thư viện Bootstrap -->
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
                <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.vi.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
                <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>

                <script>
                    let yearlyChart;
                    let monthlyChart;
                    var weeklyChart;
                    var trendingProductsChart;
                    var currentChart = "yearly";
                    var PickDateChart;
                    // Danh sách sản phẩm
                    $(document).ready(sortBy('quantity'));

                    function updateDateInputs() {
                        // var selectedYear = document.getElementById("monthDropdown").value;
                        var selectedYear = document.getElementById("yearDropdown").value;
                        var startDateInput = document.getElementById("startDate");
                        var endDateInput = document.getElementById("endDate");

                        // Lấy giá trị tháng và ngày hiện tại của ô input
                        var currentMonth = startDateInput.value.substring(5, 7);
                        var currentDay = startDateInput.value.substring(8, 10);

                        // Set the minimum and maximum values for the date inputs based on the selected year
                        startDateInput.setAttribute("min", selectedYear + "-01-01T00:00");
                        startDateInput.setAttribute("max", selectedYear + "-12-31T23:59");

                        endDateInput.setAttribute("min", selectedYear + "-01-01T00:00");
                        endDateInput.setAttribute("max", selectedYear + "-12-31T23:59");

                        // Kiểm tra và cập nhật giá trị ngày tối thiểu nếu người dùng đã chọn ngày trong tháng khác
                        var newMinDate = currentDay + "-" + currentMonth + "-" + selectedYear + "T00:00";
                        if (startDateInput.value < newMinDate) {
                            startDateInput.setAttribute("min", startDateInput.value);
                        }

                        // Kiểm tra và cập nhật giá trị ngày tối đa nếu người dùng đã chọn ngày trong tháng khác
                        var newMaxDate = currentDay + "-" + currentMonth + "-" + selectedYear + "T23:59";
                        if (endDateInput.value > newMaxDate) {
                            endDateInput.setAttribute("max", endDateInput.value);
                        }
                    }

                    function sortBy(option) {
                        // Gọi API với tùy chọn sắp xếp tương ứng
                        var apiUrl = 'https://localhost:7162/api/Chart/SoldProductsByMonth?sortBy=' + option;

                        $.ajax({
                            url: apiUrl,
                            method: 'GET',
                            success: function (data) {
                                // Kiểm tra dữ liệu trong console log
                                // console.log(data);

                                // Xử lý dữ liệu và cập nhật HTML
                                var tableBody = $('#productTable tbody');
                                tableBody.empty();

                                // Kiểm tra cấu trúc dữ liệu để xác định tên thuộc tính
                                var productNameKey = 'ProductName';
                                var quantitySoldKey = 'QuantitySold';
                                var imageProductKey = 'ProductImage';

                                // Sử dụng $.each để lặp qua mảng dữ liệu
                                $.each(data.labels, function (index, productName) {
                                    var quantitySold = data.quantities[index];

                                    var imageProduct = data.images[index];

                                    // Hiển thị thông tin sản phẩm trong bảng
                                    var row = '<tr>' +
                                        '<td style="width: 150px; height: 150px; overflow: hidden;">' +
                                        '<img src="' + imageProduct.trim() + '" style="width: 100%; height: auto;  object-position: 0 0;" alt="Product Image">' +
                                        '</td>' +
                                        '<td>' + productName + '</td>' +
                                        '<td>' + quantitySold + '</td>' +
                                        '</tr>';
                                    tableBody.append(row);
                                });
                            },
                            error: function (error) {
                                // Xử lý lỗi nếu có
                                console.error('Error fetching data:', error);
                            }
                        });
                    }

                    function fetchAndDrawChart() {
                        // Lấy giá trị từ ô input cho startDate và endDate
                        var startDate = document.getElementById('startDate').value;
                        var endDate = document.getElementById('endDate').value;

                        // Gọi API với tham số là startDate và endDate
                        fetch(`https://localhost:7162/api/Chart/DatePicker?startDate=${startDate}&endDate=${endDate}`)
                            .then(response => response.json())
                            .then(data => {
                                var ctx = document.getElementById('selectedChart').getContext('2d');
                                if (yearlyChart) {
                                    yearlyChart.destroy()
                                }
                                if (monthlyChart){
                                    monthlyChart.destroy();
                                }
                                if (weeklyChart) {
                                    weeklyChart.destroy()
                                }
                                if (PickDateChart) {
                                    PickDateChart.destroy()
                                }
                                currentChart = "DatePicker";
                                console.log(currentChart);

                                // Sử dụng moment.js để định dạng lại các ngày
                                var formattedDates = data.labels.map(date => moment(date).format('DD-MM-YYYY'));

                                // Tạo biểu đồ
                                PickDateChart = new Chart(ctx, {
                                    type: 'line',
                                    data: {
                                        labels: formattedDates,
                                        datasets: [{
                                            label: data.label,
                                            data: data.values,
                                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                            borderColor: 'rgba(75, 192, 192, 1)',
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });
                            })
                            .catch(error => console.error('Error:', error));
                    }

                    function validateAndFetch() {
                        // Lấy giá trị từ ô input
                        var startDateValue = document.getElementById("startDate").value;
                        var endDateValue = document.getElementById("endDate").value;

                        // Kiểm tra xem có nhập đủ dữ liệu hay không
                        if (!startDateValue || !endDateValue) {
                            alert("Vui lòng nhập đủ dữ liệu cho ngày bắt đầu và ngày kết thúc.");
                            return;
                        }
                        // Kiểm tra nếu ngày bắt đầu lớn hơn ngày kết thúc
                        if (new Date(startDateValue) > new Date(endDateValue)) {
                            alert("Ngày tháng năm không hợp lệ");
                            return;
                        }
                        // Nếu dữ liệu đủ, tiếp tục thực hiện fetchAndDrawChart hoặc hành động mong muốn
                        fetchAndDrawChart();
                    }

                    $(document).ready(function () {
                        
                        // Mặc định chọn năm hiện tại
                        var currentYear = new Date().getFullYear();
                        $('#yearDropdown').val(currentYear);
                        DrawChartForYear(currentYear);
                        GetCustomer();
                        GetProducts();
                        GetRevenues();
                        GetOrders();
                       
                        var currentDay = new Date();

                        // Sự kiện thay đổi của dropdown
                        $('#chartTypeDropdown').on('change', function () {
                            var selectedChartType = $(this).val();

                            // Hủy bỏ biểu đồ hiện tại nếu có
                            if (yearlyChart) {
                                yearlyChart.destroy()
                            }
                            if (monthlyChart) {
                                monthlyChart.destroy()
                            }
                            if (PickDateChart) {
                                PickDateChart.destroy()
                            }

                            // Gọi hàm vẽ biểu đồ tương ứng dựa trên loại đã chọn
                            if (selectedChartType === 'yearly') {
                                var selectedYear = $('#yearDropdown').val();
                                currentChart = "yearly";
                                console.log(currentChart);
                                DrawChartForYear(selectedYear);
                            } else if(selectedChartType === 'monthly'){
                                var selectedMonth = $('#monthDropdown').val();
                                var selectedYear = $('#yearDropdown').val();
                                currentChart = "monthly";
                                console.log(currentChart);
                                DrawChartForMonthOfTheYear(selectedMonth, selectedYear);
                            } else if (selectedChartType === 'weekly') {
                                currentChart = "weekly";
                                console.log(currentChart);
                                DrawLast7DayChart();
                            }
                        });
                        $('#yearDropdown').on('change', function () {
                            var selectedYear = $(this).val();
                            var selectedMonth = document.getElementById("monthDropdown").value;
                            // Nếu dropdown chọn loại biểu đồ đang là 'weekly', thay đổi nó thành 'yearly'
                            if ($('#chartTypeDropdown').val() === 'weekly' || $('#chartTypeDropdown').val() === 'monthly') {
                                $('#chartTypeDropdown').val('yearly');
                            }                            
                            if (yearlyChart) {
                                yearlyChart.destroy()
                            }
                            if (monthlyChart){
                                monthlyChart.destroy()
                            }
                            if (weeklyChart) {
                                weeklyChart.destroy()
                            }
                            if (PickDateChart) {
                                PickDateChart.destroy()
                            }
                            // updateDateInputs();
                            if (selectedMonth !== "0") {
                                $('#chartTypeDropdown').val('monthly');
                                currentChart = "monthly";
                                DrawChartForMonthOfTheYear(selectedMonth, selectedYear);
                            } else {
                                currentChart = "yearly";
                                DrawChartForYear(selectedYear);
                            }                            
                           
                            console.log(currentChart);
                        });
                        $('#monthDropdown').on('change', function () {
                            var selectedMonth = $(this).val();
                            var selectedYear = document.getElementById("yearDropdown").value;
                            // Nếu dropdown chọn loại biểu đồ đang là 'weekly', thay đổi nó thành 'yearly'
                            if ($('#chartTypeDropdown').val() === 'weekly' || $('#chartTypeDropdown').val() === 'yearly') {
                                $('#chartTypeDropdown').val('monthly');
                            }
                            if (yearlyChart) {
                                yearlyChart.destroy()
                            }
                            if (monthlyChart) {
                                monthlyChart.destroy()
                            }
                            if (weeklyChart) {
                                weeklyChart.destroy()
                            }
                            if (PickDateChart) {
                                PickDateChart.destroy()
                            }
                            // updateDateInputs();
                            DrawChartForMonthOfTheYear(selectedMonth,selectedYear);
                            currentChart = "monthly";
                            console.log(currentChart);
                        });
                        // Hàm vẽ biểu đồ với dữ liệu từ API
                        function DrawChart(data, chartType) {
                            // Hủy bỏ biểu đồ hiện tại nếu có
                            if (yearlyChart) {
                                yearlyChart.destroy();
                            }
                            if (monthlyChart) {
                                monthlyChart.destroy();
                            }
                            if (weeklyChart) {
                                weeklyChart.destroy();
                            }
                            if (PickDateChart) {
                                PickDateChart.destroy();
                            }

                            const ctx = document.getElementById('selectedChart').getContext('2d');

                            if (chartType === 'yearly') {
                                // Mảng chứa giá trị của 12 tháng
                                var monthsData = new Array(12).fill(0);

                                // Ánh xạ dữ liệu từ API vào mảng đầy đủ của 12 tháng
                                data.values.forEach(function (value, index) {
                                    // Tháng được trả về từ API là 1-indexed, chuyển về 0-indexed
                                    var monthIndex = data.labels[index] - 1;
                                    monthsData[monthIndex] = value;
                                });

                                yearlyChart = new Chart(ctx, {
                                    type: 'bar',
                                    data: {
                                        labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                                        datasets: [{
                                            label: data.label,
                                            data: monthsData,
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });
                            } 
                            else if (chartType === 'monthly') {
                                // Giả sử data.labels là mảng các ngày trong tháng
                                var daysInMonth = new Array(31).fill(0);

                                // Ánh xạ dữ liệu từ API vào mảng đầy đủ của các ngày trong tháng
                                data.values.forEach(function (value, index) {
                                    // Ngày được trả về từ API là 1-indexed, chuyển về 0-indexed
                                    var dayIndex = data.labels[index] - 1;
                                    daysInMonth[dayIndex] = value;
                                });

                                monthlyChart = new Chart(ctx, {
                                    type: 'bar',
                                    data: {
                                        labels: Array.from({ length: 31 }, (_, i) => `Ngày ${i + 1}`),
                                        datasets: [{
                                            label: data.label,
                                            data: daysInMonth,
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });
                            }
                        }
                        // Hàm gọi API và vẽ biểu đồ cho năm được chọn
                        function DrawChartForYear(selectedYear) {
                            $.ajax({
                                url: 'https://localhost:7162/api/Chart/' + selectedYear,
                                method: 'GET',
                                dataType: 'json',
                                success: function (data) {
                                    if (data && data.values && data.label) {
                                        DrawChart(data,'yearly');
                                    } else {
                                        console.error('Invalid data received from API');
                                    }
                                },
                                error: function (error) {
                                    console.error('Error fetching data:', error);
                                }
                            });
                        }
                        function DrawChartForMonthOfTheYear(selectedMonth,selectedYear) {
                            var linkapi = "";
                            var datatype = "";
                            if (selectedMonth === "0") {
                                linkapi = 'https://localhost:7162/api/Chart/StatisticsByYear/' + selectedYear;
                                datatype = 'yearly';
                                $('#chartTypeDropdown').val('yearly');
                            } else {
                                linkapi = 'https://localhost:7162/api/Chart/StatisticsByMonthOfTheYear/' + selectedMonth + '/' + selectedYear;
                                datatype = 'monthly';
                            }
                            $.ajax({   
                                url: linkapi,
                                method: 'GET',
                                dataType: 'json',
                                success: function (data) {
                                    if (data && data.values && data.label) {
                                        DrawChart(data,datatype);
                                    } else {
                                        console.error('Invalid data received from API');
                                    }
                                },
                                error: function (error) {
                                    console.error('Error fetching data:', error);
                                }
                            });
                        }
                        function Last7DayChart(data) {
                            var currentDay = new Date();

                            const ctx = document.getElementById('selectedChart').getContext('2d');
                            // Hủy bỏ biểu đồ hiện tại nếu có
                            if (yearlyChart) {
                                yearlyChart.destroy()
                            }
                            if (monthlyChart) {
                                monthlyChart.destroy()
                            }
                            if (weeklyChart) {
                                weeklyChart.destroy()
                            }
                            if (PickDateChart) {
                                PickDateChart.destroy()
                            }

                            // Mảng chứa giá trị của 7 ngày gần nhất
                            var dayData = new Array(7).fill(0);

                            // Mảng chứa nhãn của 7 ngày gần nhất với định dạng ngày/tháng
                            var labels = [];
                            for (var i = 6; i >= 0; i--) {
                                var date = new Date(currentDay);
                                date.setDate(currentDay.getDate() - i);

                                var day = date.getDate();
                                var month = date.getMonth() + 1;

                                // Định dạng ngày và tháng thành "dd/mm" và thêm vào mảng labels
                                var formattedDate = `${day < 10 ? '0' : ''}${day}/${month < 10 ? '0' : ''}${month}`;
                                labels.push(formattedDate);
                            }

                            var z = labels[0].slice(0, 2);
                            // console.log('Begin Date:' + z);
                            var dayIndex = 0;
                            var biengancuaIndex = 0;
                            // Ánh xạ dữ liệu từ API vào mảng của 7 ngày gần nhất
                            data.values.forEach(
                                function (value, index) {
                                    // 25/11
                                    var day = data.labels[index];
                                    var daydate;

                                    // Kiểm tra định dạng dd/mm/yyyy
                                    if (day.length === 10) {
                                        daydate = day.slice(3, 5); // Lấy ngày từ vị trí 3 đến 4 trong chuỗi
                                    }
                                    // Kiểm tra định dạng dd/mm/yyyy
                                    else if (day.length === 9 && day.indexOf("/") === 1) {
                                        daydate = day.slice(2, 3); // Lấy ngày từ vị trí 2 trong chuỗi
                                    }
                                    // Kiểm tra định dạng dd/m/yyyy
                                    else if (day.length === 9 && day.indexOf("/") === 2) {
                                        daydate = day.slice(3, 4); // Lấy ngày từ vị trí 3 trong chuỗi
                                    }
                                    // Kiểm tra định dạng dd/m/yyyy
                                    else if (day.length === 8 && day.indexOf("/") === 1) {
                                        daydate = day.slice(2, 3); // Lấy ngày từ vị trí 2 trong chuỗi
                                    }
                                    // Kiểm tra định dạng dd/m/yyyy hoặc d/mm/yyyy
                                    else if (day.length === 8 && day.indexOf("/") === 2) {
                                        daydate = day.slice(3, 4); // Lấy ngày từ vị trí 3 trong chuỗi
                                    }

                                    // console.log("Ngày là: " + daydate);

                                    dayIndex = daydate - z;
                                    if (dayIndex < 0) {
                                        dayData[biengancuaIndex] = value;
                                        biengancuaIndex += 1;
                                        // console.log("Bien: " + biengancuaIndex);
                                    }

                                    else {
                                        dayData[dayIndex] = value;
                                        biengancuaIndex = dayIndex + 1;
                                        // console.log("Bien: " + dayIndex);
                                    }
                                }

                            );
                            weeklyChart = new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        label: data.label,
                                        data: dayData,
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        y: {
                                            beginAtZero: true
                                        }
                                    }
                                }
                            });
                        }
                        // Hàm vẽ biểu đồ hàng tuần
                        function DrawLast7DayChart() {
                            $.ajax({
                                url: 'https://localhost:7162/api/Chart/weekly',
                                method: 'GET',
                                dataType: 'json',
                                success: function (data) {
                                    if (data && data.labels && data.values && data.label) {
                                        Last7DayChart(data);
                                    } else {
                                        console.error('Invalid data received from API');
                                    }
                                },
                                error: function (error) {
                                    console.error('Error fetching data:', error);
                                }
                            });
                        }
                        function GetCustomer() {
                            // Gọi API sử dụng Fetch API
                            fetch('https://localhost:7162/api/Chart/Customers/Count')
                                .then(response => response.json())
                                .then(data => {
                                    var customerCountElement = document.getElementById('customerCount');

                                    // Kiểm tra xem phần tử có tồn tại không
                                    if (customerCountElement) {
                                        customerCountElement.innerText = data.count;
                                    }
                                })
                                .catch(error => console.error('Error fetching customer data:', error));
                        };
                        function GetProducts() {
                            fetch('https://localhost:7162/api/Chart/Products/Count')
                                .then(response => response.json())
                                .then(data => {
                                    var productsCountElement = document.getElementById('products');

                                    // Kiểm tra xem phần tử có tồn tại không
                                    if (productsCountElement) {
                                        productsCountElement.innerText = data.totalQuantity;
                                    }
                                })
                                .catch(error => console.error('Error fetching customer data:', error));
                        };
                        function GetRevenues() {
                            fetch('https://localhost:7162/api/Chart/Revenues/Count')
                                .then(response => response.json())
                                .then(data => {
                                    var totalRevenue = document.getElementById('revenues');

                                    // Kiểm tra xem phần tử có tồn tại không
                                    if (totalRevenue) {
                                        totalRevenue.innerText = data.totalRevenue;
                                    }
                                })
                                .catch(error => console.error('Error fetching customer data:', error));
                        };
                        function GetOrders() {
                            fetch('https://localhost:7162/api/Chart/CountOrders/Count')
                                .then(response => response.json())
                                .then(data => {
                                    var totalOrder = document.getElementById('orderCount');

                                    // Kiểm tra xem phần tử có tồn tại không
                                    if (totalOrder) {
                                        totalOrder.innerText = data.countorder;
                                    }
                                })
                                .catch(error => console.error('Error fetching customer data:', error));
                        };

                    });

                    function exportToExcel() {
                        if (confirm("Tải về file Excel?")) {
                            var url = "https://localhost:7162/api/Chart/ExportDataToExcel/" + currentChart;
                            var selectedmonth = document.getElementById("monthDropdown").value;
                            var selectedyear = document.getElementById("yearDropdown").value;
                            
                            console.log(selectedyear)
                            // Kiểm tra nếu là DatePicker thì lấy giá trị startDate và endDate từ các phần tử HTML
                            if (currentChart === "DatePicker") {
                                var startDateElement = document.getElementById("startDate");
                                var endDateElement = document.getElementById("endDate");

                                // Kiểm tra xem phần tử có tồn tại không
                                if (startDateElement && endDateElement) {
                                    var startDateValue = startDateElement.value;
                                    var endDateValue = endDateElement.value;

                                    // Thêm tham số startDate và endDate vào đường dẫn
                                    url += `?startDate=${encodeURIComponent(startDateValue)}&endDate=${encodeURIComponent(endDateValue)}`;
                                }
                                else {
                                    console.error("Không tìm thấy phần tử HTML");
                                    return;
                                }
                            } else if (currentChart === "monthly"){
                                url += `?month=${encodeURIComponent(selectedmonth)}&currentyear=${encodeURIComponent(selectedyear)}`;


                            }
                            else if (currentChart === "yearly") {
                                url += `?currentyear=${encodeURIComponent(selectedyear)}`;
                            }

                            // Chuyển hướng đến đường dẫn đã tạo
                            window.location.href = url;
                        }
                    }

                </script>
            </div>

        </div>
        <!-- /.row (main row) -->
    </div><!-- /.container-fluid -->
</section>

