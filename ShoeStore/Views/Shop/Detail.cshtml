@using System.Net
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ShoeStore.ViewModels.ProductDetailandReviewVM 
@{
	ViewData["Title"] = "Chi tiết sản phẩm";
	Layout = "~/Views/Shared/_Layout.cshtml";
	List<Category> categories = ViewBag.Category;
	List<Product> products = ViewBag.Product;
	List<ProductDetail> productdetails = ViewBag.ProductDetail;
	List<ProductImage> productImages = ViewBag.ProductImage;
	List<Size> sizes = ViewBag.Size;
}

<link rel="stylesheet" type="text/css" href="~/assets/styles/single_styles.css">
<link rel="stylesheet" type="text/css" href="~/assets/styles/single_responsive.css">
<style>
	/*phon to anh*/
	.image_container {
		position: relative;
		overflow: hidden;
	}

	.single_product_image {
		position: relative;
		overflow: hidden;
	}

	.single_product_image_background {
		width: 100%;
		height: 100%;
		background-size: cover;
		background-position: center;
		transition: transform 0.5s ease;
	}

	.single_product_image:hover .single_product_image_background {
		transform: scale(2.5);
	}

	/*nhieu anh*/

	.disabled-button {
		opacity: 0.5; /* Độ mờ 50% */
		pointer-events: none; /* Ngăn chặn sự kiện click */
	}

	.add_to_cart_button1 {
		width: 160px;
		margin-left: 19px;
		font-size: 12px !important;
		color: #fff;

	}
	/* Mỗi size trong danh sách */
	.product_size li {
		display: inline-block; /* Hiển thị theo hàng ngang */
		width: 50px; /* Chiều rộng của ô vuông */
		height: 50px; /* Chiều cao của ô vuông */
		margin-right: 10px; /* Khoảng cách giữa các size */
		background-color: #f0f0f0; /* Màu nền */
		border-radius: 5px; /* Bo tròn góc */
		cursor: pointer; /* Con trỏ chuột thành hình bàn tay */
		text-align: center; /* Căn giữa nội dung */
		line-height: 50px; /* Dòng chữ giữa */
	}

		/* Hover effect khi di chuột vào size */
		.product_size li:hover {
			background-color: #d0d0d0; /* Màu nền khi hover */
			color: #fff; /* Màu chữ khi hover */
		}

		.product_size li.active {
			background-color: #007bff; /* Màu nền khi được kích hoạt */
			color: #fff; /* Màu chữ khi được kích hoạt */
		}

</style>
@if(Model != null )
{
<div class="container single_product_container">
	<div class="row">
		<div class="col">
			<!-- Breadcrumbs -->
			<div class="breadcrumbs d-flex flex-row align-items-center">
				<ul>
					<li><a href="/">Trang chủ</a></li>
					@foreach (var item in products)
					{
						@if(Model.ProductId == item.Id)
						{
							var cate = categories.FirstOrDefault(c => c.Id == item.CategoryId);
							<li><a href="~/shop/index/@cate.Id"><i class="fa fa-angle-right" aria-hidden="true"></i>@cate.Name</a></li>
							<li class="active"><a href="#"><i class="fa fa-angle-right" aria-hidden="true"></i>@item.Name</a></li>
						}
					}
				</ul>
			</div>

		</div>
	</div>

	<div class="row">
		<div class="col-lg-7">
			<div class="single_product_pics">
				<div class="row">
						<div class="col-lg-3 thumbnails_col order-lg-1 order-2">
							<div class="single_product_thumbnails">
								<ul class="thumbnails_list">
									@foreach (var item in productImages)
									{
										if (item.ProductDetailId == Model.Id)
										{
											if (item.IsDefault)
											{
												<li class="active"><img src="@item.Image" height="136px" alt="" data-image="@item.Image"></li>
											}
											else
											{
												<li><img src="@item.Image" height="136px" alt="" data-image="@item.Image"></li>
											}
										}
									}
								</ul>
							</div>
							<div class="arrow prev"></div>
							<div class="arrow next"></div>
						</div>

						<div class="col-lg-9 image_col order-lg-2 order-1 image_container" >
							<div class="single_product_image" id="image_container">
								<div class="single_product_image_background" style="background-image:url(@Model.Image)"></div>
							</div>
						</div>
				</div>
			</div>
		</div>
		<div class="col-lg-5">
			<div class="product_details">
				@if (ViewBag.Product != null)
				{
					foreach (var prd in products)
					{
						if (@prd.Id == Model.ProductId)
						{
							<div class="product_details_title">
								<h2>@Model.Name </h2>
								<p>@prd.Description</p>
							</div>
								<span id="numberofproducts" style="font-size:16px"></span>
							@* <div class="free_delivery d-flex flex-row align-items-center justify-content-center">
							 	<span class="ti-truck"></span><span>free delivery</span> 
									
							</div> *@

								@if (Model.PriceSale > 0)
								{
									<div class="original_price">@ShoeStore.Common.Common.FormatNumber(Model.Price, 0) đ</div>
									<div class="product_price">@ShoeStore.Common.Common.FormatNumber(Model.PriceSale, 0) đ</div>
								}
								else
								{
									<div class="original_price">@ShoeStore.Common.Common.FormatNumber(Model.Price, 0) đ</div>
									<div class="product_price">@ShoeStore.Common.Common.FormatNumber(Model.Price, 0) đ</div>
								}
								int totaRating = 0;
								foreach (var rev in Model.Reviews)
								{
									totaRating += rev.Rate ?? 0;

								}
								var y = ViewBag.count == 0 ? 1 : ViewBag.count;
								totaRating = totaRating / y;
								<ul class="star_rating">
									@Html.Raw((ShoeStore.Common.Common.HtmlRate(totaRating)) )
									</ul>
							<div class="product_size">
								<span style="padding-bottom:5px">Chọn size:</span>
								<p></p>
									<ul>
										@{
											var lstS = new List<int>();
											foreach (var pd in ViewBag.productdetaillist)
											{
												if (lstS.Any(c => c == pd.SizeId))
												{
													continue;
												}
												var item = sizes.FirstOrDefault(s => s.Id == pd.SizeId);
												lstS.Add(pd.SizeId);
													<li data-size-id="@item.Id" data-productdetail-id="@pd.Id" data-color-id="@Model.ColorId">@item.Name</li>
											}
										}
										@* @foreach (var item in ViewBag.Size)
										{
											<li data-size-id="@item.Id" data-product-id="@Model.ProductId" >@item.Name</li>
										} *@
									</ul>

							</div>
							<div class="quantity d-flex flex-column flex-sm-row align-items-sm-center">
								<span style="width:70px">Số lượng:</span>
								<div class="quantity_selector">
									<span class="minus"><i class="fa fa-minus" aria-hidden="true"></i></span>
									<span id="quantity_value">1</span>
									<span class="plus"><i class="fa fa-plus" aria-hidden="true"></i></span>
								</div>
								<div class="red_button add_to_cart_button1" style="cursor:pointer">
									<a class="btnAddToCart"  data-colorid="@Model.ColorId" style="cursor:pointer">Thêm vào giỏ hàng</a>
								</div>
								@* <div class="product_favorite d-flex flex-column align-items-center justify-content-center"></div> *@
							</div>
							}
						}
					}
			</div>
		</div>
	</div>
</div>
<!-- Tabs -->
<div class="tabs_section_container">

	<div class="container">
		<div class="row">
			<div class="col">
				<div class="tabs_container">
					<ul class="tabs d-flex flex-sm-row flex-column align-items-left align-items-md-center justify-content-center">
						<li class="tab active" data-active-tab="tab_1"><span>Mô tả</span></li>
						<li class="tab" data-active-tab="tab_2"><span>Thông tin thêm</span></li>
							<li class="tab" data-active-tab="tab_3"><span class="reviewquantity">Đánh giá (@ViewBag.count)</span></li>
					</ul>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col">

				<!-- Tab Description -->
					
				<div id="tab_1" class="tab_container active">
					<div class="row">
							@Html.Raw(@WebUtility.HtmlDecode(Model.Product.Detail))
					</div>
				</div>

				<!-- Tab Additional Info -->

				<div id="tab_2" class="tab_container">
					<div class="row">
						<div class="col additional_info_col">
							<div class="tab_title additional_info_title">
								<h4>Additional Information</h4>
							</div>
							<p>COLOR:<span>Gold, Red</span></p>
							<p>SIZE:<span>L,M,XL</span></p>
						</div>
					</div>
				</div>

				<!-- Tab Reviews -->

				<div id="tab_3" class="tab_container">
					<div class="row">

						<!-- User Reviews -->

						<div class="col-lg-6 reviews_col">
							<div class="tab_title reviews_title">
									<h4><span class="reviewquantity">Đánh giá (@ViewBag.count)</span></h4>
							</div>

							<!-- User Review -->
								<table class="table">
									<tbody>
										@foreach (var rev in Model.Reviews)
										{
											var i = 0;
											 <tr id="trow_@rev.Id">
												 <td >
													<div class="user_review_container d-flex flex-column flex-sm-row">
														<div class="user">
															<div class="user_pic"></div>
															<div class="user_rating">
																<ul class="star_rating">
																	@Html.Raw(ShoeStore.Common.Common.HtmlRate(rev.Rate ?? 0))
																</ul>
															</div>
														</div>
														<div class="review">
															<div class="review_date">@rev.CreateAt.Value.ToString("dd/MM/yyyy HH:mm:ss")</div>
															<div class="user_name">@rev.Username</div>
															<p>@rev.Content</p>
														</div>
														@if (User.IsInRole("Admin") || User.IsInRole("Employee"))
														{
															<div>

																<button class="btnDeleteReview btn btn-sm btn-cancel" data-id="@rev.Id" data-product-id="@Model.ProductId" width="100px" style="height: 30px;margin-left: 30px">Xóa</button>
															</div>
														}
													</div>
												 </td>
												
											</tr>
											i++;
										}
									</tbody>
								
								</table>
								
							
						</div>

						<!-- Add Review -->

						<div class="col-lg-6 add_review_col">

							<div class="add_review">
									<form id="review_form" asp-action="PostReview" asp-controller="shop" method="post" enctype="multipart/form-data">
									<div>
										<h1>Thêm đánh giá</h1>
											<input id="review_name" class="form_input input_name" type="text" name="Username" placeholder="Username*" required="required" data-error="Name is required.">
											<input id="review_email" class="form_input input_email" type="email" name="Email" placeholder="Email*" required="required" data-error="Valid email is required.">
											<input type="text" id="txtRate" name="Rate" value="4" style="visibility:hidden;" />
									</div>
									<div>
										<h1>Đánh giá của bạn:</h1>
										<ul class="user_star_rating">
											<li><i class="fa fa-star" aria-hidden="true"></i></li>
											<li><i class="fa fa-star" aria-hidden="true"></i></li>
											<li><i class="fa fa-star" aria-hidden="true"></i></li>
											<li><i class="fa fa-star" aria-hidden="true"></i></li>
											<li><i class="fa fa-star-o" aria-hidden="true"></i></li>
										</ul>
											<input type="hidden" id="ProductDetaiId" asp-for="ProductDetailId" value="@ViewBag.productdetailid" />
											<input type="hidden" id="ProdcutId" asp-for="ProductId" value="@ViewBag.productid" />
										<textarea id="review_message" class="input_review" name="Content" placeholder="Đánh giá" rows="4" required data-error="Please, leave us a review."></textarea>
									</div>
									<div class="text-left text-sm-right">
										<button id="review_submit" type="submit" class="red_button review_submit_btn trans_300" value="submit">submit</button>
									</div>
								</form>
							</div>

						</div>

					</div>
				</div>

			</div>
		</div>
	</div>

</div>
}
@section Scripts{
	<script src="~/assets/js/single_custom.js"></script>
	<script>
		// phóng to ảnh
		const imageContainer = document.getElementById("image_container");

		imageContainer.addEventListener("mousemove", function (event) {
			const x = event.offsetX / this.offsetWidth;
			const y = event.offsetY / this.offsetHeight;

			const imageBackground = this.querySelector(".single_product_image_background");
			imageBackground.style.transformOrigin = `${x * 100}% ${y * 100}%`;
		});

		// Sử dụng jQuery để thêm hoặc loại bỏ lớp active khi người dùng click
		$('.product_size li').click(function () {
			$('.product_size li').removeClass('active'); // Loại bỏ lớp active từ tất cả các size
			$(this).addClass('active'); // Thêm lớp active cho size được click
		});
		$('body').on('click', '.btnDeleteReview', function () {
			var id = $(this).data("id");
			var productid = $(this).data("product-id");
			var conf = confirm('Bạn có muốn xóa bỉnh luận này không?');
			if (conf === true) {
				$.ajax({
					url: '/shop/DeleteReview',
					type: 'POST',
					data: { id: id ,productid: productid},
					success: function (rs) {
						if (rs.success) {
							$('#trow_' + id).remove();
							// location.reload();
							$(".reviewquantity").html("Đánh giá (" + rs.reviewquantity + ")");
						}
					}
				});
			}
		});
		$(document).ready(function () {
			$('.product_size ul li').click(function () {
				var sizeId = $(this).attr('data-size-id');
				var colorId = $(this).attr('data-color-id');
				var productdetailId = $(this).attr('data-productdetail-id');

				$.ajax({
					url: '/shop/GetNumberOfProductDetail',
					type: 'GET',
					data: { id: productdetailId, sizeid: sizeId, colorid : colorId },
					success: function (response) {
						if (response.success) {
							$('#numberofproducts').text('Số lượng sản phẩm hiện có: ' + response.quantity);
							$('.btnAddToCart').prop('disabled', false);
							$('.btnAddToCart').removeClass('disabled');
							$('.btnAddToCart').attr("data-id", response.productdetailid);
							$('.add_to_cart_button1').removeClass('disabled-button');
						} else {
							$('#numberofproducts').text('Sản phẩm hiện đã hết hàng');
							$('.btnAddToCart').prop('disabled', true);
							$('.btnAddToCart').addClass('disabled');
							$('.add_to_cart_button1').addClass('disabled-button');
						}
					},
					error: function () {
						$('#numberofproducts').text('Đã xảy ra lỗi khi lấy số lượng.');
					}
				});
			});
		});

	</script>
}