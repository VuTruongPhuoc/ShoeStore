@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using System.Globalization
@using Newtonsoft.Json
@model X.PagedList.IPagedList<ShoeStore.Models.ProductDetail>
@{
	ViewData["Title"] = "Cửa hàng";
	Layout = "~/Views/Shared/_Layout.cshtml";
	List<WishList> wishlists = ViewBag.wishlist;
	List<Category> categories = ViewBag.Category;
	List<Color> color = ViewBag.Color;
	List<Size> sizes = ViewBag.Size;
	List<Product> product = ViewBag.Product;
	var categoryid = ViewBag.CategoryId;
}
<!-- Hamburger Menu -->
<link rel="stylesheet" type="text/css" href="~/assets/styles/categories_styles.css">
<link rel="stylesheet" type="text/css" href="~/assets/styles/categories_responsive.css">
<div class="container product_section_container">
	<div class="row">
		<div class="col product_section clearfix">

			<!-- Breadcrumbs -->

			<div class="breadcrumbs d-flex flex-row align-items-center">
				<ul>
					<li><a asp-controller="Home" asp-action="index">Trang chủ</a></li>
					<li class="active"><a href="index.html"><i class="fa fa-angle-right" aria-hidden="true"></i>Cửa hàng</a></li>
				</ul>
			</div>

			<!-- Sidebar -->

			<div class="sidebar">
				<div class="sidebar_section">
					<div class="sidebar_title">
						<h5>Loại sản phẩm</h5>
					</div>
					<form id="category-filter-form">
						<ul class="sidebar_categories">
							@if (ViewBag.Category != null)
								{
									<li class="filter-list">
										<input class="pixel-radio" type="checkbox" id="category-all" value="all" name="category">
										<label for="category-all">Tất cả loại</label>
									</li>
									foreach(var item in categories)
									{
									<li class="filter-list">
										<input class="pixel-radio" type="checkbox" id="category-@item.Id" value="@item.Id" name="category" @(item.Id == categoryid ? "checked" : "")>
										<label for="category-@item.Id">@item.Name</label>
									</li>
									}
								}
						</ul>
					</form>
				</div>

				<!-- Price Range Filtering -->
				<div class="sidebar_section">
					<div class="sidebar_title">
						<h5>Lọc theo giá</h5>
					</div>
					@* <p>
						<input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
					</p>
					<div id="slider-range"></div> 
					<div class="filter_button"><span>Lọc</span></div>*@
					 <form id="price-filter-form">
						<ul>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-all" value="all" name="price" >
								<label for="price-all">Tất cả giá</label>
							</li>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-2" value="100000-300000" name="price">
								<label for="price-2">100k - 300k</label>
							</li>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-3" value="300000-500000" name="price">
								<label for="price-3">300k - 500k</label>
							</li>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-4" value="500000-700000" name="price">
								<label for="price-4">500k - 700k</label>
							</li>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-5" value="700000-1000000" name="price">
								<label for="price-5">700k - 1000k</label>
							</li>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="price-5" value="1000000-0" name="price">
								<label for="price-5">Trên 1000k</label>
							</li>
						</ul>
					</form>
					
				</div>

				<!-- Sizes -->
				<div class="sidebar_section">
					<div class="sidebar_title">
						<h5>Kích cỡ</h5>
					</div>
					<form id="size-filter-form">
						<ul>
							@if (sizes != null && sizes.Count > 0)
							{
								<li class="filter-list">
									<input class="pixel-radio" type="checkbox" id="size-all" value="all" name="size">
									<label for="size-all">Tất cả size</label>
								</li>
								@foreach (var item in sizes)
								{
									<li class="filter-list">
										<input class="pixel-radio " type="checkbox" id="size-@item.Name" value="@item.Id" name="size">
										<label class="" for="size-@item.Id">@item.Name</label>
									</li>
								}
							}
						</ul>
					</form>
				</div>

				<!-- color -->
				<div class="sidebar_section">
					<div class="sidebar_title">
						<h5>Màu sắc</h5>
					</div>
					<form id="color-filter-form">
						<ul>
							<li class="filter-list">
								<input class="pixel-radio" type="checkbox" id="color-all" value="all" name="color">
								<label for="color-all">Tất cả màu sắc</label>
							</li>
							@{
								foreach (var item in color)
								{
									<li class="filter-list">
										<input class="pixel-radio" type="checkbox" id="color-@item.Id" value="@item.Id" name="color">
										<label for="@item.Id">@item.Name</label>
									</li>
								}
							}
						</ul>
					</form>
				</div>

			</div>
			@* <button id="btnFilter" class="btn btn-close">Lọc</button> *@
			<!-- Main Content -->

			<div class="main_content">

				<!-- Products -->

				<div class="products_iso">
					<div class="row">
						<div class="col">

							<!-- Product Sorting -->

							@* <div class="product_sorting_container product_sorting_container_top">
								<ul class="product_sorting">
									<li>
										<span class="type_sorting_text">Mặc định</span>
										<i class="fa fa-angle-down"></i>
										<ul class="sorting_type">
											<li class="type_sorting_btn" data-isotope-option='{ "sortBy": "original-order" }'><span>Mặc định</span></li>
											<li class="type_sorting_btn" data-isotope-option='{ "sortBy": "price" }'><span>Giá</span></li>
											<li class="type_sorting_btn" data-isotope-option='{ "sortBy": "name" }'><span>Tên sản phẩm</span></li>
										</ul>
									</li>
								</ul>

							</div> *@

							<!-- Product Grid -->

							<div class="product-grid row" id="filtered-products">
								<!-- Product 1 -->
								@if (Model != null && Model.Any())
								{
									foreach (var item in Model)
									{
										var prd = product.FirstOrDefault(p => p.Id == item.ProductId);
										var userid = 0;
										@if (User.Identity.IsAuthenticated)
										{
											userid = int.Parse(User.Claims.FirstOrDefault(u => u.Type == "Id").Value);
										}
										var wishlist = wishlists.FirstOrDefault(w => w.AccountId == userid && w.ProductDetailId == item.Id);
										var isWishlist = false;
										if (wishlist != null)
										{
											isWishlist = true;
										}
										<div class="product-item item">
											<div class="product discount product_filter">
												<div class="product_image">
													<img src="@item.Image" height="221px" alt="@item.Name">
												</div>
												@if (isWishlist == true)
												{
													<div class="favorite favorite_left active" data-id="@item.Id"></div>
												}
												else
												{
													<div class="favorite favorite_left" data-id="@item.Id"></div>
												}

												@if (item.PriceSale > 0)
												{
													<div class="product_bubble product_bubble_right product_bubble_red d-flex flex-column align-items-center"><span>sale</span></div>
												}
												<div class="product_info">
													<h6 class="product_name"><a href="~/shop/detail/@item.Id"> @item.Name</a></h6>
													@if (item.PriceSale > 0)
													{
														<div class="product_price">@ShoeStore.Common.Common.FormatNumber(item.PriceSale, 0)<span>@ShoeStore.Common.Common.FormatNumber(item.Price, 0)</span></div>

														<div style="display:none;" class="in_product_price"> @item.PriceSale</div>
													}
													else
													{
														<div class="product_price">@ShoeStore.Common.Common.FormatNumber(item.Price, 0)</div>
														<div style="display:none;" class="in_product_price"> @item.Price</div>
													}
												</div>
											</div>
											<div class="red_button add_to_cart_button"><a href="~/shop/detail/@item.Id">Mua ngay</a></div>
										</div>
									}

								}
								
							</div>

							<!-- Product Sorting -->
							<div class="col-md-12" style="float:right">
								@* @if (Model != null && Model.Any())
								{
									<div class="product_sorting_container product_sorting_container_bottom clearfix">
										@Html.PagedListPager(Model, page => Url.Action("index", new { page = page, sort = ViewBag.sort, sizes = ViewBag.sizes,searchtext = ViewBag.searchtext }), new PagedListRenderOptions()
										{
										ActiveLiElementClass = "active",
										PageClasses = new[] { "page-link" },
										LiElementClasses = new[] { "page-item" },
										UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3", "size" },
										LinkToNextPageFormat = "Tiếp",
										LinkToPreviousPageFormat = "Trước",
										MaximumPageNumbersToDisplay = 12,
										DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
										DisplayLinkToNextPage = PagedListDisplayMode.Always
										})
									</div>
								}
							</div> *@
							
						
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	<script src="~/assets/js/categories_customs.js"></script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			// Thêm sự kiện cho nút lọc
			function handleCheckboxChange(){
				var categories = getSelectedCheckboxes("category-filter-form");
				var colors = getSelectedCheckboxes("color-filter-form");
				var sizes = getSelectedCheckboxes("size-filter-form");
				var priceRange = getSelectedCheckboxes("price-filter-form");
				var data = {
					Categories: categories,
					Colors: colors,
					Sizes: sizes,
					PriceRanges: priceRange
				};

				// Gửi yêu cầu lọc đến server
				fetch("/Shop/GetFilterProducts", {
					method: "POST",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify(data)
				})
					.then(handleResponse)
					.then(updateFilteredProducts)
					.catch(handleError);
			}
			$('input[type=checkbox]').on('change', function () {
				handleCheckboxChange();
			});


			// Hàm xử lý phản hồi từ fetch
			function handleResponse(response) {
				if (response.ok) {
					return response.text();
				} else {
					throw new Error("Error sending data to the controller");
				}
			}

			// Hàm cập nhật sản phẩm sau khi lọc
			function updateFilteredProducts(result) {
				$("#filtered-products").html(result);

				$("#filtered-products").css({
					"height": ""

				});
			}

			// Hàm xử lý lỗi
			function handleError(error) {
				console.log("An error occurred: ", error);
			}
			var productsData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.Productlists ?? new List<ProductDetail>()));
			// Hàm lấy giá trị của các checkbox được chọn trong một biểu mẫu
			function getSelectedCheckboxes(formId) {
				var checkboxes = $('#' + formId + ' input[type="checkbox"]:checked');
				return checkboxes.map(function () {
					return $(this).val();
				}).get();
			}
			
		});
	</script>

}